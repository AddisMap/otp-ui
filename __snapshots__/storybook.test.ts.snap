// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots BaseMap Click And Viewportchanged Events 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--click-and-viewportchanged-events",
        "kind": "BaseMap",
        "name": "Click And Viewportchanged Events",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--click-and-viewportchanged-events",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Click And Viewportchanged Events",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--click-and-viewportchanged-events"
  kind="BaseMap"
  name="Click And Viewportchanged Events"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--click-and-viewportchanged-events",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Click And Viewportchanged Events"
/>
`;

exports[`Storyshots BaseMap Custom Location Popup Content 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--custom-location-popup-content",
        "kind": "BaseMap",
        "name": "Custom Location Popup Content",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--custom-location-popup-content",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "color-contrast",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Custom Location Popup Content",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--custom-location-popup-content"
  kind="BaseMap"
  name="Custom Location Popup Content"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--custom-location-popup-content",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "color-contrast",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Custom Location Popup Content"
/>
`;

exports[`Storyshots BaseMap Max Zoom 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--max-zoom",
        "kind": "BaseMap",
        "name": "Max Zoom",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--max-zoom",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Max Zoom",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--max-zoom"
  kind="BaseMap"
  name="Max Zoom"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--max-zoom",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Max Zoom"
/>
`;

exports[`Storyshots BaseMap On Context Menu Popup 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--on-context-menu-popup",
        "kind": "BaseMap",
        "name": "On Context Menu Popup",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--on-context-menu-popup",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "On Context Menu Popup",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--on-context-menu-popup"
  kind="BaseMap"
  name="On Context Menu Popup"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--on-context-menu-popup",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="On Context Menu Popup"
/>
`;

exports[`Storyshots BaseMap Overlay With Large Data Set 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--overlay-with-large-data-set",
        "kind": "BaseMap",
        "name": "Overlay With Large Data Set",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--overlay-with-large-data-set",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Overlay With Large Data Set",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--overlay-with-large-data-set"
  kind="BaseMap"
  name="Overlay With Large Data Set"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--overlay-with-large-data-set",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Overlay With Large Data Set"
/>
`;

exports[`Storyshots BaseMap With Example Base Layers 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--with-example-base-layers",
        "kind": "BaseMap",
        "name": "With Example Base Layers",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--with-example-base-layers",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Example Base Layers",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--with-example-base-layers"
  kind="BaseMap"
  name="With Example Base Layers"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--with-example-base-layers",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Example Base Layers"
/>
`;

exports[`Storyshots BaseMap With Overlays Overlapping Other Markers 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--with-overlays-overlapping-other-markers",
        "kind": "BaseMap",
        "name": "With Overlays Overlapping Other Markers",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--with-overlays-overlapping-other-markers",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Overlays Overlapping Other Markers",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--with-overlays-overlapping-other-markers"
  kind="BaseMap"
  name="With Overlays Overlapping Other Markers"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--with-overlays-overlapping-other-markers",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Overlays Overlapping Other Markers"
/>
`;

exports[`Storyshots BaseMap With Sample Markers 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--with-sample-markers",
        "kind": "BaseMap",
        "name": "With Sample Markers",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--with-sample-markers",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Sample Markers",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--with-sample-markers"
  kind="BaseMap"
  name="With Sample Markers"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--with-sample-markers",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Sample Markers"
/>
`;

exports[`Storyshots BaseMap With Two Overlays From Trimet Transit Components 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--with-two-overlays-from-trimet-transit-components",
        "kind": "BaseMap",
        "name": "With Two Overlays From Trimet Transit Components",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--with-two-overlays-from-trimet-transit-components",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Two Overlays From Trimet Transit Components",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--with-two-overlays-from-trimet-transit-components"
  kind="BaseMap"
  name="With Two Overlays From Trimet Transit Components"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--with-two-overlays-from-trimet-transit-components",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Two Overlays From Trimet Transit Components"
/>
`;

exports[`Storyshots BaseMap Zoomed 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "basemap--zoomed",
        "kind": "BaseMap",
        "name": "Zoomed",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "basemap--zoomed",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./base-map/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Zoomed",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="basemap--zoomed"
  kind="BaseMap"
  name="Zoomed"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "basemap--zoomed",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./base-map/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Zoomed"
/>
`;

exports[`Storyshots EndpointsOverlay Endpoints Overlay With Custom Map Markers 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "endpointsoverlay--endpoints-overlay-with-custom-map-markers",
        "kind": "EndpointsOverlay",
        "name": "Endpoints Overlay With Custom Map Markers",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "endpointsoverlay--endpoints-overlay-with-custom-map-markers",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Endpoints Overlay With Custom Map Markers",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="endpointsoverlay--endpoints-overlay-with-custom-map-markers"
  kind="EndpointsOverlay"
  name="Endpoints Overlay With Custom Map Markers"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "endpointsoverlay--endpoints-overlay-with-custom-map-markers",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Endpoints Overlay With Custom Map Markers"
/>
`;

exports[`Storyshots EndpointsOverlay Endpoints Overlay With Intermediate Place 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "endpointsoverlay--endpoints-overlay-with-intermediate-place",
        "kind": "EndpointsOverlay",
        "name": "Endpoints Overlay With Intermediate Place",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "endpointsoverlay--endpoints-overlay-with-intermediate-place",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Endpoints Overlay With Intermediate Place",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="endpointsoverlay--endpoints-overlay-with-intermediate-place"
  kind="EndpointsOverlay"
  name="Endpoints Overlay With Intermediate Place"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "endpointsoverlay--endpoints-overlay-with-intermediate-place",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Endpoints Overlay With Intermediate Place"
/>
`;

exports[`Storyshots EndpointsOverlay Endpoints Overlay With User Settings 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "endpointsoverlay--endpoints-overlay-with-user-settings",
        "kind": "EndpointsOverlay",
        "name": "Endpoints Overlay With User Settings",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "endpointsoverlay--endpoints-overlay-with-user-settings",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Endpoints Overlay With User Settings",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="endpointsoverlay--endpoints-overlay-with-user-settings"
  kind="EndpointsOverlay"
  name="Endpoints Overlay With User Settings"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "endpointsoverlay--endpoints-overlay-with-user-settings",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Endpoints Overlay With User Settings"
/>
`;

exports[`Storyshots EndpointsOverlay Endpoints Overlay Without User Settings 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "endpointsoverlay--endpoints-overlay-without-user-settings",
        "kind": "EndpointsOverlay",
        "name": "Endpoints Overlay Without User Settings",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "endpointsoverlay--endpoints-overlay-without-user-settings",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Endpoints Overlay Without User Settings",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="endpointsoverlay--endpoints-overlay-without-user-settings"
  kind="EndpointsOverlay"
  name="Endpoints Overlay Without User Settings"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "endpointsoverlay--endpoints-overlay-without-user-settings",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./endpoints-overlay/src/EndpointsOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Endpoints Overlay Without User Settings"
/>
`;

exports[`Storyshots From-To-Picker From To 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "from-to-picker--from-to",
        "kind": "From-To-Picker",
        "name": "From To",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "from-to-picker--from-to",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./from-to-location-picker/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "From To",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="from-to-picker--from-to"
  kind="From-To-Picker"
  name="From To"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "from-to-picker--from-to",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./from-to-location-picker/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="From To"
/>
`;

exports[`Storyshots From-To-Picker Otp Ambient Style 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "from-to-picker--otp-ambient-style",
        "kind": "From-To-Picker",
        "name": "Otp Ambient Style",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "from-to-picker--otp-ambient-style",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./from-to-location-picker/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Otp Ambient Style",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="from-to-picker--otp-ambient-style"
  kind="From-To-Picker"
  name="Otp Ambient Style"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "from-to-picker--otp-ambient-style",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./from-to-location-picker/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Otp Ambient Style"
/>
`;

exports[`Storyshots From-To-Picker Small Text Sans Serif 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "from-to-picker--small-text-sans-serif",
        "kind": "From-To-Picker",
        "name": "Small Text Sans Serif",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "from-to-picker--small-text-sans-serif",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./from-to-location-picker/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Small Text Sans Serif",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="from-to-picker--small-text-sans-serif"
  kind="From-To-Picker"
  name="Small Text Sans Serif"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "from-to-picker--small-text-sans-serif",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./from-to-location-picker/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Small Text Sans Serif"
/>
`;

exports[`Storyshots Icons/ClassicLegIcon Classic Leg Icon Examples 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "icons-classiclegicon--classic-leg-icon-examples",
        "kind": "Icons/ClassicLegIcon",
        "name": "Classic Leg Icon Examples",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "icons-classiclegicon--classic-leg-icon-examples",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./icons/src/stories/classic-leg-icon.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Classic Leg Icon Examples",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="icons-classiclegicon--classic-leg-icon-examples"
  kind="Icons/ClassicLegIcon"
  name="Classic Leg Icon Examples"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "icons-classiclegicon--classic-leg-icon-examples",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./icons/src/stories/classic-leg-icon.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Classic Leg Icon Examples"
/>
`;

exports[`Storyshots Icons/ClassicModeIcon Classic Mode Icon Examples 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "icons-classicmodeicon--classic-mode-icon-examples",
        "kind": "Icons/ClassicModeIcon",
        "name": "Classic Mode Icon Examples",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "icons-classicmodeicon--classic-mode-icon-examples",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./icons/src/stories/classic-mode-icon.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Classic Mode Icon Examples",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="icons-classicmodeicon--classic-mode-icon-examples"
  kind="Icons/ClassicModeIcon"
  name="Classic Mode Icon Examples"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "icons-classicmodeicon--classic-mode-icon-examples",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./icons/src/stories/classic-mode-icon.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Classic Mode Icon Examples"
/>
`;

exports[`Storyshots Icons/StandardLegIcon Standard Leg Icon Examples 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "icons-standardlegicon--standard-leg-icon-examples",
        "kind": "Icons/StandardLegIcon",
        "name": "Standard Leg Icon Examples",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "icons-standardlegicon--standard-leg-icon-examples",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./icons/src/stories/standard-leg-icon.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Standard Leg Icon Examples",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="icons-standardlegicon--standard-leg-icon-examples"
  kind="Icons/StandardLegIcon"
  name="Standard Leg Icon Examples"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "icons-standardlegicon--standard-leg-icon-examples",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./icons/src/stories/standard-leg-icon.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Standard Leg Icon Examples"
/>
`;

exports[`Storyshots Icons/StandardModeIcon Standard Mode Icon Examples 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "icons-standardmodeicon--standard-mode-icon-examples",
        "kind": "Icons/StandardModeIcon",
        "name": "Standard Mode Icon Examples",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "icons-standardmodeicon--standard-mode-icon-examples",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./icons/src/stories/standard-mode-icon.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Standard Mode Icon Examples",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="icons-standardmodeicon--standard-mode-icon-examples"
  kind="Icons/StandardModeIcon"
  name="Standard Mode Icon Examples"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "icons-standardmodeicon--standard-mode-icon-examples",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./icons/src/stories/standard-mode-icon.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Standard Mode Icon Examples"
/>
`;

exports[`Storyshots Icons/TrimetLegIcon Trimetxamples 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "icons-trimetlegicon--trimetxamples",
        "kind": "Icons/TrimetLegIcon",
        "name": "Trimetxamples",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "icons-trimetlegicon--trimetxamples",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./icons/src/stories/trimet-leg-icon.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Trimetxamples",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="icons-trimetlegicon--trimetxamples"
  kind="Icons/TrimetLegIcon"
  name="Trimetxamples"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "icons-trimetlegicon--trimetxamples",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./icons/src/stories/trimet-leg-icon.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Trimetxamples"
/>
`;

exports[`Storyshots Icons/TrimetModeIcon Trimet Mode Icon Examples 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "icons-trimetmodeicon--trimet-mode-icon-examples",
        "kind": "Icons/TrimetModeIcon",
        "name": "Trimet Mode Icon Examples",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "icons-trimetmodeicon--trimet-mode-icon-examples",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./icons/src/stories/trimet-mode-icon.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Trimet Mode Icon Examples",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="icons-trimetmodeicon--trimet-mode-icon-examples"
  kind="Icons/TrimetModeIcon"
  name="Trimet Mode Icon Examples"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "icons-trimetmodeicon--trimet-mode-icon-examples",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./icons/src/stories/trimet-mode-icon.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Trimet Mode Icon Examples"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Bike Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--bike-only-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Bike Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--bike-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--bike-only-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Bike Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--bike-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Only Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Bike Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--bike-rental-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Bike Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--bike-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--bike-rental-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Bike Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--bike-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Bike Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--bike-rental-transit-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Bike Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--bike-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--bike-rental-transit-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Bike Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--bike-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Bike Transit Bike Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--bike-transit-bike-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Bike Transit Bike Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--bike-transit-bike-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Transit Bike Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--bike-transit-bike-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Bike Transit Bike Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--bike-transit-bike-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Transit Bike Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Custom Time Column 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--custom-time-column",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Custom Time Column",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--custom-time-column",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Custom Time Column",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--custom-time-column"
  kind="ItineraryBody/otp-react-redux"
  name="Custom Time Column"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--custom-time-column",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Custom Time Column"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux E Scooter Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--e-scooter-rental-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "E Scooter Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--e-scooter-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--e-scooter-rental-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="E Scooter Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--e-scooter-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux E Scooter Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--e-scooter-rental-transit-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "E Scooter Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--e-scooter-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--e-scooter-rental-transit-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="E Scooter Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--e-scooter-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Individual Leg Fare Components 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--individual-leg-fare-components",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Individual Leg Fare Components",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--individual-leg-fare-components",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Individual Leg Fare Components",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--individual-leg-fare-components"
  kind="ItineraryBody/otp-react-redux"
  name="Individual Leg Fare Components"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--individual-leg-fare-components",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Individual Leg Fare Components"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Park And Ride Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--park-and-ride-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Park And Ride Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--park-and-ride-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Park And Ride Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--park-and-ride-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Park And Ride Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--park-and-ride-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Park And Ride Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Tnc Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--tnc-transit-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Tnc Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--tnc-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Tnc Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--tnc-transit-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Tnc Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--tnc-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Tnc Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Walk Interlined Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--walk-interlined-transit-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Walk Interlined Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--walk-interlined-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Interlined Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--walk-interlined-transit-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Walk Interlined Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--walk-interlined-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Interlined Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Walk Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--walk-only-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Walk Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--walk-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--walk-only-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Walk Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--walk-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Only Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Walk Transit Transfer Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--walk-transit-transfer-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Walk Transit Transfer Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--walk-transit-transfer-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Transfer Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--walk-transit-transfer-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Walk Transit Transfer Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--walk-transit-transfer-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Transfer Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-react-redux Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-react-redux--walk-transit-walk-itinerary",
        "kind": "ItineraryBody/otp-react-redux",
        "name": "Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-react-redux--walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-react-redux--walk-transit-walk-itinerary"
  kind="ItineraryBody/otp-react-redux"
  name="Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-react-redux--walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpRrItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Bike Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--bike-only-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Bike Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--bike-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--bike-only-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Bike Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--bike-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Only Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Bike Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--bike-rental-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Bike Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--bike-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--bike-rental-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Bike Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--bike-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Bike Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--bike-rental-transit-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Bike Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--bike-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--bike-rental-transit-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Bike Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--bike-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Bike Transit Bike Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--bike-transit-bike-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Bike Transit Bike Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--bike-transit-bike-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Transit Bike Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--bike-transit-bike-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Bike Transit Bike Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--bike-transit-bike-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Transit Bike Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Custom Alert Icons Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--custom-alert-icons-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Custom Alert Icons Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--custom-alert-icons-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Custom Alert Icons Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--custom-alert-icons-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Custom Alert Icons Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--custom-alert-icons-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Custom Alert Icons Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui E Scooter Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--e-scooter-rental-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "E Scooter Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--e-scooter-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--e-scooter-rental-itinerary"
  kind="ItineraryBody/otp-ui"
  name="E Scooter Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--e-scooter-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui E Scooter Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--e-scooter-rental-transit-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "E Scooter Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--e-scooter-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--e-scooter-rental-transit-itinerary"
  kind="ItineraryBody/otp-ui"
  name="E Scooter Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--e-scooter-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Park And Ride Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--park-and-ride-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Park And Ride Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--park-and-ride-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Park And Ride Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--park-and-ride-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Park And Ride Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--park-and-ride-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Park And Ride Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Styled Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--styled-walk-transit-walk-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Styled Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--styled-walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "color-contrast",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Styled Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--styled-walk-transit-walk-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Styled Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--styled-walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "color-contrast",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Styled Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Tnc Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--tnc-transit-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Tnc Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--tnc-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Tnc Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--tnc-transit-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Tnc Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--tnc-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Tnc Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Interlined Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-interlined-transit-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Interlined Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-interlined-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "color-contrast",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Interlined Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-interlined-transit-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Walk Interlined Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-interlined-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "color-contrast",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Interlined Transit Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-only-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-only-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Walk Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Only Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Transit Transfer Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-transit-transfer-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Transit Transfer Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-transit-transfer-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Transfer Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-transit-transfer-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Walk Transit Transfer Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-transit-transfer-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Transfer Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-transit-walk-itinerary",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-transit-walk-itinerary"
  kind="ItineraryBody/otp-ui"
  name="Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Transit Walk Itinerary With Agency Information 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-agency-information",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Transit Walk Itinerary With Agency Information",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-agency-information",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary With Agency Information",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-transit-walk-itinerary-with-agency-information"
  kind="ItineraryBody/otp-ui"
  name="Walk Transit Walk Itinerary With Agency Information"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-agency-information",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary With Agency Information"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Transit Walk Itinerary With Custom Place Name Component 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-place-name-component",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Transit Walk Itinerary With Custom Place Name Component",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-place-name-component",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary With Custom Place Name Component",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-place-name-component"
  kind="ItineraryBody/otp-ui"
  name="Walk Transit Walk Itinerary With Custom Place Name Component"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-place-name-component",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary With Custom Place Name Component"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Transit Walk Itinerary With Custom Transit Leg Summary Component 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-transit-leg-summary-component",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Transit Walk Itinerary With Custom Transit Leg Summary Component",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-transit-leg-summary-component",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary With Custom Transit Leg Summary Component",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-transit-leg-summary-component"
  kind="ItineraryBody/otp-ui"
  name="Walk Transit Walk Itinerary With Custom Transit Leg Summary Component"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-transit-leg-summary-component",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary With Custom Transit Leg Summary Component"
/>
`;

exports[`Storyshots ItineraryBody/otp-ui Walk Transit Walk Itinerary With Custom View Trip Button Activated And Custom Route Abbreviation 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-view-trip-button-activated-and-custom-route-abbreviation",
        "kind": "ItineraryBody/otp-ui",
        "name": "Walk Transit Walk Itinerary With Custom View Trip Button Activated And Custom Route Abbreviation",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-view-trip-button-activated-and-custom-route-abbreviation",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary With Custom View Trip Button Activated And Custom Route Abbreviation",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-view-trip-button-activated-and-custom-route-abbreviation"
  kind="ItineraryBody/otp-ui"
  name="Walk Transit Walk Itinerary With Custom View Trip Button Activated And Custom Route Abbreviation"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "itinerarybody-otp-ui--walk-transit-walk-itinerary-with-custom-view-trip-button-activated-and-custom-route-abbreviation",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./itinerary-body/src/stories/OtpUiItineraryBody.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary With Custom View Trip Button Activated And Custom Route Abbreviation"
/>
`;

exports[`Storyshots LocationField/Desktop Context Auto Focus With Multiple Controls 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-desktop-context--auto-focus-with-multiple-controls",
        "kind": "LocationField/Desktop Context",
        "name": "Auto Focus With Multiple Controls",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-desktop-context--auto-focus-with-multiple-controls",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "enabled": false,
                  "id": "label",
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Desktop.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Auto Focus With Multiple Controls",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-desktop-context--auto-focus-with-multiple-controls"
  kind="LocationField/Desktop Context"
  name="Auto Focus With Multiple Controls"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-desktop-context--auto-focus-with-multiple-controls",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "enabled": false,
              "id": "label",
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Desktop.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Auto Focus With Multiple Controls"
/>
`;

exports[`Storyshots LocationField/Desktop Context Blank 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-desktop-context--blank",
        "kind": "LocationField/Desktop Context",
        "name": "Blank",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-desktop-context--blank",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Desktop.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Blank",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-desktop-context--blank"
  kind="LocationField/Desktop Context"
  name="Blank"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-desktop-context--blank",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Desktop.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Blank"
/>
`;

exports[`Storyshots LocationField/Desktop Context No Auto Focus With Multiple Controls 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-desktop-context--no-auto-focus-with-multiple-controls",
        "kind": "LocationField/Desktop Context",
        "name": "No Auto Focus With Multiple Controls",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-desktop-context--no-auto-focus-with-multiple-controls",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "enabled": false,
                  "id": "label",
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Desktop.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "No Auto Focus With Multiple Controls",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-desktop-context--no-auto-focus-with-multiple-controls"
  kind="LocationField/Desktop Context"
  name="No Auto Focus With Multiple Controls"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-desktop-context--no-auto-focus-with-multiple-controls",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "enabled": false,
              "id": "label",
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Desktop.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="No Auto Focus With Multiple Controls"
/>
`;

exports[`Storyshots LocationField/Desktop Context Selected Location 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-desktop-context--selected-location",
        "kind": "LocationField/Desktop Context",
        "name": "Selected Location",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-desktop-context--selected-location",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Desktop.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Selected Location",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-desktop-context--selected-location"
  kind="LocationField/Desktop Context"
  name="Selected Location"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-desktop-context--selected-location",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Desktop.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Selected Location"
/>
`;

exports[`Storyshots LocationField/Desktop Context With Bad Api Key Handles Bad Autocomplete 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-desktop-context--with-bad-api-key-handles-bad-autocomplete",
        "kind": "LocationField/Desktop Context",
        "name": "With Bad Api Key Handles Bad Autocomplete",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-desktop-context--with-bad-api-key-handles-bad-autocomplete",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Desktop.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Bad Api Key Handles Bad Autocomplete",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-desktop-context--with-bad-api-key-handles-bad-autocomplete"
  kind="LocationField/Desktop Context"
  name="With Bad Api Key Handles Bad Autocomplete"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-desktop-context--with-bad-api-key-handles-bad-autocomplete",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Desktop.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Bad Api Key Handles Bad Autocomplete"
/>
`;

exports[`Storyshots LocationField/Mobile Context Blank 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-mobile-context--blank",
        "kind": "LocationField/Mobile Context",
        "name": "Blank",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-mobile-context--blank",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Mobile.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Blank",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-mobile-context--blank"
  kind="LocationField/Mobile Context"
  name="Blank"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-mobile-context--blank",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Mobile.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Blank"
/>
`;

exports[`Storyshots LocationField/Mobile Context Selected Location 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-mobile-context--selected-location",
        "kind": "LocationField/Mobile Context",
        "name": "Selected Location",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-mobile-context--selected-location",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Mobile.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Selected Location",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-mobile-context--selected-location"
  kind="LocationField/Mobile Context"
  name="Selected Location"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-mobile-context--selected-location",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Mobile.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Selected Location"
/>
`;

exports[`Storyshots LocationField/Mobile Context Styled 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-mobile-context--styled",
        "kind": "LocationField/Mobile Context",
        "name": "Styled",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-mobile-context--styled",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Mobile.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Styled",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-mobile-context--styled"
  kind="LocationField/Mobile Context"
  name="Styled"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-mobile-context--styled",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Mobile.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Styled"
/>
`;

exports[`Storyshots LocationField/Mobile Context With Custom Icons 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-mobile-context--with-custom-icons",
        "kind": "LocationField/Mobile Context",
        "name": "With Custom Icons",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-mobile-context--with-custom-icons",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Mobile.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Custom Icons",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-mobile-context--with-custom-icons"
  kind="LocationField/Mobile Context"
  name="With Custom Icons"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-mobile-context--with-custom-icons",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Mobile.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Custom Icons"
/>
`;

exports[`Storyshots LocationField/Mobile Context With Nearby Stops 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-mobile-context--with-nearby-stops",
        "kind": "LocationField/Mobile Context",
        "name": "With Nearby Stops",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-mobile-context--with-nearby-stops",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Mobile.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Nearby Stops",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-mobile-context--with-nearby-stops"
  kind="LocationField/Mobile Context"
  name="With Nearby Stops"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-mobile-context--with-nearby-stops",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Mobile.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Nearby Stops"
/>
`;

exports[`Storyshots LocationField/Mobile Context With Session Searches 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-mobile-context--with-session-searches",
        "kind": "LocationField/Mobile Context",
        "name": "With Session Searches",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-mobile-context--with-session-searches",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Mobile.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Session Searches",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-mobile-context--with-session-searches"
  kind="LocationField/Mobile Context"
  name="With Session Searches"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-mobile-context--with-session-searches",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Mobile.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Session Searches"
/>
`;

exports[`Storyshots LocationField/Mobile Context With User Settings 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationfield-mobile-context--with-user-settings",
        "kind": "LocationField/Mobile Context",
        "name": "With User Settings",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationfield-mobile-context--with-user-settings",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-field/src/stories/Mobile.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With User Settings",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationfield-mobile-context--with-user-settings"
  kind="LocationField/Mobile Context"
  name="With User Settings"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationfield-mobile-context--with-user-settings",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-field/src/stories/Mobile.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With User Settings"
/>
`;

exports[`Storyshots LocationIcon Custom Style For To 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationicon--custom-style-for-to",
        "kind": "LocationIcon",
        "name": "Custom Style For To",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationicon--custom-style-for-to",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-icon/src/LocationIcon.story.tsx",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Custom Style For To",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationicon--custom-style-for-to"
  kind="LocationIcon"
  name="Custom Style For To"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationicon--custom-style-for-to",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-icon/src/LocationIcon.story.tsx",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Custom Style For To"
/>
`;

exports[`Storyshots LocationIcon From 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationicon--from",
        "kind": "LocationIcon",
        "name": "From",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationicon--from",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-icon/src/LocationIcon.story.tsx",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "From",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationicon--from"
  kind="LocationIcon"
  name="From"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationicon--from",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-icon/src/LocationIcon.story.tsx",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="From"
/>
`;

exports[`Storyshots LocationIcon Generic Place 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationicon--generic-place",
        "kind": "LocationIcon",
        "name": "Generic Place",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationicon--generic-place",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-icon/src/LocationIcon.story.tsx",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Generic Place",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationicon--generic-place"
  kind="LocationIcon"
  name="Generic Place"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationicon--generic-place",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-icon/src/LocationIcon.story.tsx",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Generic Place"
/>
`;

exports[`Storyshots LocationIcon To 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "locationicon--to",
        "kind": "LocationIcon",
        "name": "To",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "locationicon--to",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./location-icon/src/LocationIcon.story.tsx",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "To",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="locationicon--to"
  kind="LocationIcon"
  name="To"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "locationicon--to",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./location-icon/src/LocationIcon.story.tsx",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="To"
/>
`;

exports[`Storyshots ParkAndRideOverlay Default 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "parkandrideoverlay--default",
        "kind": "ParkAndRideOverlay",
        "name": "Default",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "parkandrideoverlay--default",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./park-and-ride-overlay/src/ParkAndRideOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Default",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="parkandrideoverlay--default"
  kind="ParkAndRideOverlay"
  name="Default"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "parkandrideoverlay--default",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./park-and-ride-overlay/src/ParkAndRideOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Default"
/>
`;

exports[`Storyshots PrintableItinerary Bike Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--bike-only-itinerary",
        "kind": "PrintableItinerary",
        "name": "Bike Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--bike-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--bike-only-itinerary"
  kind="PrintableItinerary"
  name="Bike Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--bike-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Only Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Bike Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--bike-rental-itinerary",
        "kind": "PrintableItinerary",
        "name": "Bike Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--bike-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--bike-rental-itinerary"
  kind="PrintableItinerary"
  name="Bike Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--bike-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Bike Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--bike-rental-transit-itinerary",
        "kind": "PrintableItinerary",
        "name": "Bike Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--bike-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--bike-rental-transit-itinerary"
  kind="PrintableItinerary"
  name="Bike Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--bike-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Transit Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Bike Transit Bike Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--bike-transit-bike-itinerary",
        "kind": "PrintableItinerary",
        "name": "Bike Transit Bike Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--bike-transit-bike-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Transit Bike Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--bike-transit-bike-itinerary"
  kind="PrintableItinerary"
  name="Bike Transit Bike Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--bike-transit-bike-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Transit Bike Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Classic Icons And Park And Ride Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--classic-icons-and-park-and-ride-itinerary",
        "kind": "PrintableItinerary",
        "name": "Classic Icons And Park And Ride Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--classic-icons-and-park-and-ride-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Classic Icons And Park And Ride Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--classic-icons-and-park-and-ride-itinerary"
  kind="PrintableItinerary"
  name="Classic Icons And Park And Ride Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--classic-icons-and-park-and-ride-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Classic Icons And Park And Ride Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary E Scooter Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--e-scooter-rental-itinerary",
        "kind": "PrintableItinerary",
        "name": "E Scooter Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--e-scooter-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--e-scooter-rental-itinerary"
  kind="PrintableItinerary"
  name="E Scooter Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--e-scooter-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary E Scooter Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--e-scooter-rental-transit-itinerary",
        "kind": "PrintableItinerary",
        "name": "E Scooter Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--e-scooter-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--e-scooter-rental-transit-itinerary"
  kind="PrintableItinerary"
  name="E Scooter Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--e-scooter-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Transit Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Park And Ride Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--park-and-ride-itinerary",
        "kind": "PrintableItinerary",
        "name": "Park And Ride Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--park-and-ride-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Park And Ride Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--park-and-ride-itinerary"
  kind="PrintableItinerary"
  name="Park And Ride Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--park-and-ride-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Park And Ride Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Styled Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--styled-walk-transit-walk-itinerary",
        "kind": "PrintableItinerary",
        "name": "Styled Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--styled-walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Styled Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--styled-walk-transit-walk-itinerary"
  kind="PrintableItinerary"
  name="Styled Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--styled-walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Styled Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Tnc Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--tnc-transit-itinerary",
        "kind": "PrintableItinerary",
        "name": "Tnc Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--tnc-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Tnc Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--tnc-transit-itinerary"
  kind="PrintableItinerary"
  name="Tnc Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--tnc-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Tnc Transit Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Walk Interlined Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--walk-interlined-transit-itinerary",
        "kind": "PrintableItinerary",
        "name": "Walk Interlined Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--walk-interlined-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Interlined Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--walk-interlined-transit-itinerary"
  kind="PrintableItinerary"
  name="Walk Interlined Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--walk-interlined-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Interlined Transit Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Walk Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--walk-only-itinerary",
        "kind": "PrintableItinerary",
        "name": "Walk Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--walk-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--walk-only-itinerary"
  kind="PrintableItinerary"
  name="Walk Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--walk-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Only Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Walk Transit Transfer Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--walk-transit-transfer-itinerary",
        "kind": "PrintableItinerary",
        "name": "Walk Transit Transfer Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--walk-transit-transfer-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Transfer Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--walk-transit-transfer-itinerary"
  kind="PrintableItinerary"
  name="Walk Transit Transfer Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--walk-transit-transfer-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Transfer Itinerary"
/>
`;

exports[`Storyshots PrintableItinerary Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "printableitinerary--walk-transit-walk-itinerary",
        "kind": "PrintableItinerary",
        "name": "Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "printableitinerary--walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="printableitinerary--walk-transit-walk-itinerary"
  kind="PrintableItinerary"
  name="Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "printableitinerary--walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./printable-itinerary/src/PrintableItinerary.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots RouteViewerOverlay Default 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "routevieweroverlay--default",
        "kind": "RouteViewerOverlay",
        "name": "Default",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "routevieweroverlay--default",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./route-viewer-overlay/src/RouteViewerOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Default",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="routevieweroverlay--default"
  kind="RouteViewerOverlay"
  name="Default"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "routevieweroverlay--default",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./route-viewer-overlay/src/RouteViewerOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Default"
/>
`;

exports[`Storyshots RouteViewerOverlay With Path Styling 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "routevieweroverlay--with-path-styling",
        "kind": "RouteViewerOverlay",
        "name": "With Path Styling",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "routevieweroverlay--with-path-styling",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./route-viewer-overlay/src/RouteViewerOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Path Styling",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="routevieweroverlay--with-path-styling"
  kind="RouteViewerOverlay"
  name="With Path Styling"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "routevieweroverlay--with-path-styling",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./route-viewer-overlay/src/RouteViewerOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Path Styling"
/>
`;

exports[`Storyshots SettingsSelectorPanel Settings Selector Panel 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "settingsselectorpanel--settings-selector-panel",
        "kind": "SettingsSelectorPanel",
        "name": "Settings Selector Panel",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "settingsselectorpanel--settings-selector-panel",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/settings-selector-panel.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Settings Selector Panel",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="settingsselectorpanel--settings-selector-panel"
  kind="SettingsSelectorPanel"
  name="Settings Selector Panel"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "settingsselectorpanel--settings-selector-panel",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/settings-selector-panel.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Settings Selector Panel"
/>
`;

exports[`Storyshots SettingsSelectorPanel Settings Selector Panel Undefined Params 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "settingsselectorpanel--settings-selector-panel-undefined-params",
        "kind": "SettingsSelectorPanel",
        "name": "Settings Selector Panel Undefined Params",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "settingsselectorpanel--settings-selector-panel-undefined-params",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/settings-selector-panel.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Settings Selector Panel Undefined Params",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="settingsselectorpanel--settings-selector-panel-undefined-params"
  kind="SettingsSelectorPanel"
  name="Settings Selector Panel Undefined Params"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "settingsselectorpanel--settings-selector-panel-undefined-params",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/settings-selector-panel.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Settings Selector Panel Undefined Params"
/>
`;

exports[`Storyshots SettingsSelectorPanel Settings Selector Panel With Custom Icons 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "settingsselectorpanel--settings-selector-panel-with-custom-icons",
        "kind": "SettingsSelectorPanel",
        "name": "Settings Selector Panel With Custom Icons",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "settingsselectorpanel--settings-selector-panel-with-custom-icons",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/settings-selector-panel.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Settings Selector Panel With Custom Icons",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="settingsselectorpanel--settings-selector-panel-with-custom-icons"
  kind="SettingsSelectorPanel"
  name="Settings Selector Panel With Custom Icons"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "settingsselectorpanel--settings-selector-panel-with-custom-icons",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/settings-selector-panel.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Settings Selector Panel With Custom Icons"
/>
`;

exports[`Storyshots StopViewerOverlay Default 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "stopvieweroverlay--default",
        "kind": "StopViewerOverlay",
        "name": "Default",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "stopvieweroverlay--default",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "StopMarker": [Function],
              "stop": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./stop-viewer-overlay/src/StopViewerOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Default",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="stopvieweroverlay--default"
  kind="StopViewerOverlay"
  name="Default"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "stopvieweroverlay--default",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "StopMarker": [Function],
          "stop": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./stop-viewer-overlay/src/StopViewerOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Default"
/>
`;

exports[`Storyshots StopViewerOverlay With Custom Marker 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "stopvieweroverlay--with-custom-marker",
        "kind": "StopViewerOverlay",
        "name": "With Custom Marker",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "stopvieweroverlay--with-custom-marker",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "StopMarker": [Function],
              "stop": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./stop-viewer-overlay/src/StopViewerOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Custom Marker",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="stopvieweroverlay--with-custom-marker"
  kind="StopViewerOverlay"
  name="With Custom Marker"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "stopvieweroverlay--with-custom-marker",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "StopMarker": [Function],
          "stop": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./stop-viewer-overlay/src/StopViewerOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Custom Marker"
/>
`;

exports[`Storyshots StopsOverlay Default 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "stopsoverlay--default",
        "kind": "StopsOverlay",
        "name": "Default",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "stopsoverlay--default",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./stops-overlay/src/StopsOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Default",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="stopsoverlay--default"
  kind="StopsOverlay"
  name="Default"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "stopsoverlay--default",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./stops-overlay/src/StopsOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Default"
/>
`;

exports[`Storyshots StopsOverlay With Custom Markers 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "stopsoverlay--with-custom-markers",
        "kind": "StopsOverlay",
        "name": "With Custom Markers",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "stopsoverlay--with-custom-markers",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./stops-overlay/src/StopsOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Custom Markers",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="stopsoverlay--with-custom-markers"
  kind="StopsOverlay"
  name="With Custom Markers"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "stopsoverlay--with-custom-markers",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./stops-overlay/src/StopsOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Custom Markers"
/>
`;

exports[`Storyshots TransitVehicleOverlay Real-time circles 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitvehicleoverlay--real-time-circles",
        "kind": "TransitVehicleOverlay",
        "name": "Real-time circles",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitvehicleoverlay--real-time-circles",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transit-vehicle-overlay/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Real-time circles",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitvehicleoverlay--real-time-circles"
  kind="TransitVehicleOverlay"
  name="Real-time circles"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitvehicleoverlay--real-time-circles",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transit-vehicle-overlay/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Real-time circles"
/>
`;

exports[`Storyshots TransitVehicleOverlay Real-time rectangles 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitvehicleoverlay--real-time-rectangles",
        "kind": "TransitVehicleOverlay",
        "name": "Real-time rectangles",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitvehicleoverlay--real-time-rectangles",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transit-vehicle-overlay/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Real-time rectangles",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitvehicleoverlay--real-time-rectangles"
  kind="TransitVehicleOverlay"
  name="Real-time rectangles"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitvehicleoverlay--real-time-rectangles",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transit-vehicle-overlay/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Real-time rectangles"
/>
`;

exports[`Storyshots TransitVehicleOverlay Simple overlay (alternative ws data) 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitvehicleoverlay--simple-overlay-alternative-ws-data",
        "kind": "TransitVehicleOverlay",
        "name": "Simple overlay (alternative ws data)",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitvehicleoverlay--simple-overlay-alternative-ws-data",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transit-vehicle-overlay/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Simple overlay (alternative ws data)",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitvehicleoverlay--simple-overlay-alternative-ws-data"
  kind="TransitVehicleOverlay"
  name="Simple overlay (alternative ws data)"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitvehicleoverlay--simple-overlay-alternative-ws-data",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transit-vehicle-overlay/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Simple overlay (alternative ws data)"
/>
`;

exports[`Storyshots TransitVehicleOverlay Simple overlay 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitvehicleoverlay--simple-overlay",
        "kind": "TransitVehicleOverlay",
        "name": "Simple overlay",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitvehicleoverlay--simple-overlay",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transit-vehicle-overlay/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Simple overlay",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitvehicleoverlay--simple-overlay"
  kind="TransitVehicleOverlay"
  name="Simple overlay"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitvehicleoverlay--simple-overlay",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transit-vehicle-overlay/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Simple overlay"
/>
`;

exports[`Storyshots TransitVehicleOverlay Simple rectangles (click to select) 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitvehicleoverlay--simple-rectangles-click-to-select",
        "kind": "TransitVehicleOverlay",
        "name": "Simple rectangles (click to select)",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitvehicleoverlay--simple-rectangles-click-to-select",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transit-vehicle-overlay/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Simple rectangles (click to select)",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitvehicleoverlay--simple-rectangles-click-to-select"
  kind="TransitVehicleOverlay"
  name="Simple rectangles (click to select)"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitvehicleoverlay--simple-rectangles-click-to-select",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transit-vehicle-overlay/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Simple rectangles (click to select)"
/>
`;

exports[`Storyshots TransitVehicleOverlay Static rectangles (marker popups) 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitvehicleoverlay--static-rectangles-marker-popups",
        "kind": "TransitVehicleOverlay",
        "name": "Static rectangles (marker popups)",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitvehicleoverlay--static-rectangles-marker-popups",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transit-vehicle-overlay/src/index.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Static rectangles (marker popups)",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitvehicleoverlay--static-rectangles-marker-popups"
  kind="TransitVehicleOverlay"
  name="Static rectangles (marker popups)"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitvehicleoverlay--static-rectangles-marker-popups",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transit-vehicle-overlay/src/index.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Static rectangles (marker popups)"
/>
`;

exports[`Storyshots TransitiveOverlay Bike Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--bike-only-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Bike Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--bike-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--bike-only-itinerary"
  kind="TransitiveOverlay"
  name="Bike Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--bike-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Only Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Bike Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--bike-rental-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Bike Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--bike-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--bike-rental-itinerary"
  kind="TransitiveOverlay"
  name="Bike Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--bike-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Bike Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--bike-rental-transit-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Bike Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--bike-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--bike-rental-transit-itinerary"
  kind="TransitiveOverlay"
  name="Bike Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--bike-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Transit Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Bike Transit Bike Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--bike-transit-bike-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Bike Transit Bike Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--bike-transit-bike-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Transit Bike Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--bike-transit-bike-itinerary"
  kind="TransitiveOverlay"
  name="Bike Transit Bike Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--bike-transit-bike-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Transit Bike Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay E Scooter Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--e-scooter-rental-itinerary",
        "kind": "TransitiveOverlay",
        "name": "E Scooter Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--e-scooter-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--e-scooter-rental-itinerary"
  kind="TransitiveOverlay"
  name="E Scooter Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--e-scooter-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay E Scooter Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--e-scooter-rental-transit-itinerary",
        "kind": "TransitiveOverlay",
        "name": "E Scooter Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--e-scooter-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--e-scooter-rental-transit-itinerary"
  kind="TransitiveOverlay"
  name="E Scooter Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--e-scooter-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Transit Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Park And Ride Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--park-and-ride-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Park And Ride Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--park-and-ride-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Park And Ride Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--park-and-ride-itinerary"
  kind="TransitiveOverlay"
  name="Park And Ride Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--park-and-ride-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Park And Ride Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Tnc Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--tnc-transit-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Tnc Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--tnc-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Tnc Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--tnc-transit-itinerary"
  kind="TransitiveOverlay"
  name="Tnc Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--tnc-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Tnc Transit Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Walk Interlined Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--walk-interlined-transit-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Walk Interlined Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--walk-interlined-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Interlined Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--walk-interlined-transit-itinerary"
  kind="TransitiveOverlay"
  name="Walk Interlined Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--walk-interlined-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Interlined Transit Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Walk Transit Transfer Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--walk-transit-transfer-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Walk Transit Transfer Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--walk-transit-transfer-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Transfer Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--walk-transit-transfer-itinerary"
  kind="TransitiveOverlay"
  name="Walk Transit Transfer Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--walk-transit-transfer-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Transfer Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--walk-transit-walk-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--walk-transit-walk-itinerary"
  kind="TransitiveOverlay"
  name="Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots TransitiveOverlay Walk Transit Walk Itinerary And Custom Label Styles 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--walk-transit-walk-itinerary-and-custom-label-styles",
        "kind": "TransitiveOverlay",
        "name": "Walk Transit Walk Itinerary And Custom Label Styles",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--walk-transit-walk-itinerary-and-custom-label-styles",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary And Custom Label Styles",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--walk-transit-walk-itinerary-and-custom-label-styles"
  kind="TransitiveOverlay"
  name="Walk Transit Walk Itinerary And Custom Label Styles"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--walk-transit-walk-itinerary-and-custom-label-styles",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary And Custom Label Styles"
/>
`;

exports[`Storyshots TransitiveOverlay Walk Transit Walk Itinerary With No Intermediate Stops 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--walk-transit-walk-itinerary-with-no-intermediate-stops",
        "kind": "TransitiveOverlay",
        "name": "Walk Transit Walk Itinerary With No Intermediate Stops",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--walk-transit-walk-itinerary-with-no-intermediate-stops",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary With No Intermediate Stops",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--walk-transit-walk-itinerary-with-no-intermediate-stops"
  kind="TransitiveOverlay"
  name="Walk Transit Walk Itinerary With No Intermediate Stops"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--walk-transit-walk-itinerary-with-no-intermediate-stops",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary With No Intermediate Stops"
/>
`;

exports[`Storyshots TransitiveOverlay Walking Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "transitiveoverlay--walking-itinerary",
        "kind": "TransitiveOverlay",
        "name": "Walking Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "transitiveoverlay--walking-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walking Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="transitiveoverlay--walking-itinerary"
  kind="TransitiveOverlay"
  name="Walking Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "transitiveoverlay--walking-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./transitive-overlay/src/TransitiveOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walking Itinerary"
/>
`;

exports[`Storyshots Trip Form Components Checkbox Selector 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "trip-form-components--checkbox-selector",
        "kind": "Trip Form Components",
        "name": "Checkbox Selector",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "trip-form-components--checkbox-selector",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/components.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": Object {
            "CheckboxSelector": [Function],
            "DateTimeSelector": [Function],
            "DropdownSelector": [Function],
            "GeneralSettingsPanel": [Function],
            "ModeButton": [Function],
            "ModeSelector": [Function],
            "SubmodeSelector": [Function],
          },
        },
        "story": "Checkbox Selector",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="trip-form-components--checkbox-selector"
  kind="Trip Form Components"
  name="Checkbox Selector"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "trip-form-components--checkbox-selector",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/components.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": Object {
        "CheckboxSelector": [Function],
        "DateTimeSelector": [Function],
        "DropdownSelector": [Function],
        "GeneralSettingsPanel": [Function],
        "ModeButton": [Function],
        "ModeSelector": [Function],
        "SubmodeSelector": [Function],
      },
    }
  }
  story="Checkbox Selector"
/>
`;

exports[`Storyshots Trip Form Components Date Time Selector 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "trip-form-components--date-time-selector",
        "kind": "Trip Form Components",
        "name": "Date Time Selector",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "trip-form-components--date-time-selector",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/components.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": Object {
            "CheckboxSelector": [Function],
            "DateTimeSelector": [Function],
            "DropdownSelector": [Function],
            "GeneralSettingsPanel": [Function],
            "ModeButton": [Function],
            "ModeSelector": [Function],
            "SubmodeSelector": [Function],
          },
        },
        "story": "Date Time Selector",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="trip-form-components--date-time-selector"
  kind="Trip Form Components"
  name="Date Time Selector"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "trip-form-components--date-time-selector",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/components.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": Object {
        "CheckboxSelector": [Function],
        "DateTimeSelector": [Function],
        "DropdownSelector": [Function],
        "GeneralSettingsPanel": [Function],
        "ModeButton": [Function],
        "ModeSelector": [Function],
        "SubmodeSelector": [Function],
      },
    }
  }
  story="Date Time Selector"
/>
`;

exports[`Storyshots Trip Form Components Dropdown Selector 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "trip-form-components--dropdown-selector",
        "kind": "Trip Form Components",
        "name": "Dropdown Selector",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "trip-form-components--dropdown-selector",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/components.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": Object {
            "CheckboxSelector": [Function],
            "DateTimeSelector": [Function],
            "DropdownSelector": [Function],
            "GeneralSettingsPanel": [Function],
            "ModeButton": [Function],
            "ModeSelector": [Function],
            "SubmodeSelector": [Function],
          },
        },
        "story": "Dropdown Selector",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="trip-form-components--dropdown-selector"
  kind="Trip Form Components"
  name="Dropdown Selector"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "trip-form-components--dropdown-selector",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/components.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": Object {
        "CheckboxSelector": [Function],
        "DateTimeSelector": [Function],
        "DropdownSelector": [Function],
        "GeneralSettingsPanel": [Function],
        "ModeButton": [Function],
        "ModeSelector": [Function],
        "SubmodeSelector": [Function],
      },
    }
  }
  story="Dropdown Selector"
/>
`;

exports[`Storyshots Trip Form Components General Settings Panel 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "trip-form-components--general-settings-panel",
        "kind": "Trip Form Components",
        "name": "General Settings Panel",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "trip-form-components--general-settings-panel",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/components.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": Object {
            "CheckboxSelector": [Function],
            "DateTimeSelector": [Function],
            "DropdownSelector": [Function],
            "GeneralSettingsPanel": [Function],
            "ModeButton": [Function],
            "ModeSelector": [Function],
            "SubmodeSelector": [Function],
          },
        },
        "story": "General Settings Panel",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="trip-form-components--general-settings-panel"
  kind="Trip Form Components"
  name="General Settings Panel"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "trip-form-components--general-settings-panel",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/components.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": Object {
        "CheckboxSelector": [Function],
        "DateTimeSelector": [Function],
        "DropdownSelector": [Function],
        "GeneralSettingsPanel": [Function],
        "ModeButton": [Function],
        "ModeSelector": [Function],
        "SubmodeSelector": [Function],
      },
    }
  }
  story="General Settings Panel"
/>
`;

exports[`Storyshots Trip Form Components Mode Buttons 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "trip-form-components--mode-buttons",
        "kind": "Trip Form Components",
        "name": "Mode Buttons",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "trip-form-components--mode-buttons",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/components.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": Object {
            "CheckboxSelector": [Function],
            "DateTimeSelector": [Function],
            "DropdownSelector": [Function],
            "GeneralSettingsPanel": [Function],
            "ModeButton": [Function],
            "ModeSelector": [Function],
            "SubmodeSelector": [Function],
          },
        },
        "story": "Mode Buttons",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="trip-form-components--mode-buttons"
  kind="Trip Form Components"
  name="Mode Buttons"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "trip-form-components--mode-buttons",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/components.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": Object {
        "CheckboxSelector": [Function],
        "DateTimeSelector": [Function],
        "DropdownSelector": [Function],
        "GeneralSettingsPanel": [Function],
        "ModeButton": [Function],
        "ModeSelector": [Function],
        "SubmodeSelector": [Function],
      },
    }
  }
  story="Mode Buttons"
/>
`;

exports[`Storyshots Trip Form Components Mode Selector 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "trip-form-components--mode-selector",
        "kind": "Trip Form Components",
        "name": "Mode Selector",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "trip-form-components--mode-selector",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/components.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": Object {
            "CheckboxSelector": [Function],
            "DateTimeSelector": [Function],
            "DropdownSelector": [Function],
            "GeneralSettingsPanel": [Function],
            "ModeButton": [Function],
            "ModeSelector": [Function],
            "SubmodeSelector": [Function],
          },
        },
        "story": "Mode Selector",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="trip-form-components--mode-selector"
  kind="Trip Form Components"
  name="Mode Selector"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "trip-form-components--mode-selector",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/components.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": Object {
        "CheckboxSelector": [Function],
        "DateTimeSelector": [Function],
        "DropdownSelector": [Function],
        "GeneralSettingsPanel": [Function],
        "ModeButton": [Function],
        "ModeSelector": [Function],
        "SubmodeSelector": [Function],
      },
    }
  }
  story="Mode Selector"
/>
`;

exports[`Storyshots Trip Form Components Submode Selector 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "trip-form-components--submode-selector",
        "kind": "Trip Form Components",
        "name": "Submode Selector",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "trip-form-components--submode-selector",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-form/src/components.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": Object {
            "CheckboxSelector": [Function],
            "DateTimeSelector": [Function],
            "DropdownSelector": [Function],
            "GeneralSettingsPanel": [Function],
            "ModeButton": [Function],
            "ModeSelector": [Function],
            "SubmodeSelector": [Function],
          },
        },
        "story": "Submode Selector",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="trip-form-components--submode-selector"
  kind="Trip Form Components"
  name="Submode Selector"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "trip-form-components--submode-selector",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-form/src/components.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": Object {
        "CheckboxSelector": [Function],
        "DateTimeSelector": [Function],
        "DropdownSelector": [Function],
        "GeneralSettingsPanel": [Function],
        "ModeButton": [Function],
        "ModeSelector": [Function],
        "SubmodeSelector": [Function],
      },
    }
  }
  story="Submode Selector"
/>
`;

exports[`Storyshots TripDetails Bike Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--bike-only-itinerary",
        "kind": "TripDetails",
        "name": "Bike Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--bike-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--bike-only-itinerary"
  kind="TripDetails"
  name="Bike Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--bike-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Only Itinerary"
/>
`;

exports[`Storyshots TripDetails Bike Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--bike-rental-itinerary",
        "kind": "TripDetails",
        "name": "Bike Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--bike-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--bike-rental-itinerary"
  kind="TripDetails"
  name="Bike Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--bike-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Itinerary"
/>
`;

exports[`Storyshots TripDetails Bike Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--bike-rental-transit-itinerary",
        "kind": "TripDetails",
        "name": "Bike Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--bike-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--bike-rental-transit-itinerary"
  kind="TripDetails"
  name="Bike Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--bike-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Rental Transit Itinerary"
/>
`;

exports[`Storyshots TripDetails Bike Transit Bike Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--bike-transit-bike-itinerary",
        "kind": "TripDetails",
        "name": "Bike Transit Bike Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--bike-transit-bike-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Bike Transit Bike Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--bike-transit-bike-itinerary"
  kind="TripDetails"
  name="Bike Transit Bike Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--bike-transit-bike-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Bike Transit Bike Itinerary"
/>
`;

exports[`Storyshots TripDetails E Scooter Rental Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--e-scooter-rental-itinerary",
        "kind": "TripDetails",
        "name": "E Scooter Rental Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--e-scooter-rental-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--e-scooter-rental-itinerary"
  kind="TripDetails"
  name="E Scooter Rental Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--e-scooter-rental-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Itinerary"
/>
`;

exports[`Storyshots TripDetails E Scooter Rental Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--e-scooter-rental-transit-itinerary",
        "kind": "TripDetails",
        "name": "E Scooter Rental Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--e-scooter-rental-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "E Scooter Rental Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--e-scooter-rental-transit-itinerary"
  kind="TripDetails"
  name="E Scooter Rental Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--e-scooter-rental-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="E Scooter Rental Transit Itinerary"
/>
`;

exports[`Storyshots TripDetails Park And Ride Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--park-and-ride-itinerary",
        "kind": "TripDetails",
        "name": "Park And Ride Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--park-and-ride-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Park And Ride Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--park-and-ride-itinerary"
  kind="TripDetails"
  name="Park And Ride Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--park-and-ride-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Park And Ride Itinerary"
/>
`;

exports[`Storyshots TripDetails Styled Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--styled-walk-transit-walk-itinerary",
        "kind": "TripDetails",
        "name": "Styled Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--styled-walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Styled Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--styled-walk-transit-walk-itinerary"
  kind="TripDetails"
  name="Styled Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--styled-walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Styled Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots TripDetails Tnc Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--tnc-transit-itinerary",
        "kind": "TripDetails",
        "name": "Tnc Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--tnc-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Tnc Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--tnc-transit-itinerary"
  kind="TripDetails"
  name="Tnc Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--tnc-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Tnc Transit Itinerary"
/>
`;

exports[`Storyshots TripDetails Walk Interlined Transit Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--walk-interlined-transit-itinerary",
        "kind": "TripDetails",
        "name": "Walk Interlined Transit Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--walk-interlined-transit-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Interlined Transit Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--walk-interlined-transit-itinerary"
  kind="TripDetails"
  name="Walk Interlined Transit Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--walk-interlined-transit-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Interlined Transit Itinerary"
/>
`;

exports[`Storyshots TripDetails Walk Only Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--walk-only-itinerary",
        "kind": "TripDetails",
        "name": "Walk Only Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--walk-only-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Only Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--walk-only-itinerary"
  kind="TripDetails"
  name="Walk Only Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--walk-only-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Only Itinerary"
/>
`;

exports[`Storyshots TripDetails Walk Transit Transfer Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--walk-transit-transfer-itinerary",
        "kind": "TripDetails",
        "name": "Walk Transit Transfer Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--walk-transit-transfer-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Transfer Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--walk-transit-transfer-itinerary"
  kind="TripDetails"
  name="Walk Transit Transfer Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--walk-transit-transfer-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Transfer Itinerary"
/>
`;

exports[`Storyshots TripDetails Walk Transit Walk Itinerary 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--walk-transit-walk-itinerary",
        "kind": "TripDetails",
        "name": "Walk Transit Walk Itinerary",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--walk-transit-walk-itinerary",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--walk-transit-walk-itinerary"
  kind="TripDetails"
  name="Walk Transit Walk Itinerary"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--walk-transit-walk-itinerary",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary"
/>
`;

exports[`Storyshots TripDetails Walk Transit Walk Itinerary And Custom Messages 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripdetails--walk-transit-walk-itinerary-and-custom-messages",
        "kind": "TripDetails",
        "name": "Walk Transit Walk Itinerary And Custom Messages",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripdetails--walk-transit-walk-itinerary-and-custom-messages",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": undefined,
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-details/src/TripDetails.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Walk Transit Walk Itinerary And Custom Messages",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripdetails--walk-transit-walk-itinerary-and-custom-messages"
  kind="TripDetails"
  name="Walk Transit Walk Itinerary And Custom Messages"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripdetails--walk-transit-walk-itinerary-and-custom-messages",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": undefined,
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-details/src/TripDetails.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Walk Transit Walk Itinerary And Custom Messages"
/>
`;

exports[`Storyshots TripViewerOverlay Default 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripvieweroverlay--default",
        "kind": "TripViewerOverlay",
        "name": "Default",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripvieweroverlay--default",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-viewer-overlay/src/TripViewerOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Default",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripvieweroverlay--default"
  kind="TripViewerOverlay"
  name="Default"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripvieweroverlay--default",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-viewer-overlay/src/TripViewerOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Default"
/>
`;

exports[`Storyshots TripViewerOverlay With Path Styling 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "tripvieweroverlay--with-path-styling",
        "kind": "TripViewerOverlay",
        "name": "With Path Styling",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "tripvieweroverlay--with-path-styling",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./trip-viewer-overlay/src/TripViewerOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "With Path Styling",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="tripvieweroverlay--with-path-styling"
  kind="TripViewerOverlay"
  name="With Path Styling"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "tripvieweroverlay--with-path-styling",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./trip-viewer-overlay/src/TripViewerOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="With Path Styling"
/>
`;

exports[`Storyshots VehicleRentalOverlay Rental Bicycles 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "vehiclerentaloverlay--rental-bicycles",
        "kind": "VehicleRentalOverlay",
        "name": "Rental Bicycles",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "vehiclerentaloverlay--rental-bicycles",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "companies": [Function],
              "configCompanies": [Function],
              "getStationName": [Function],
              "mapSymbols": [Function],
              "refreshVehicles": [Function],
              "setLocation": [Function],
              "stations": [Function],
              "visible": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Rental Bicycles",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="vehiclerentaloverlay--rental-bicycles"
  kind="VehicleRentalOverlay"
  name="Rental Bicycles"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "vehiclerentaloverlay--rental-bicycles",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "companies": [Function],
          "configCompanies": [Function],
          "getStationName": [Function],
          "mapSymbols": [Function],
          "refreshVehicles": [Function],
          "setLocation": [Function],
          "stations": [Function],
          "visible": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Rental Bicycles"
/>
`;

exports[`Storyshots VehicleRentalOverlay Rental Bicycles Using New Symbols Prop 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "vehiclerentaloverlay--rental-bicycles-using-new-symbols-prop",
        "kind": "VehicleRentalOverlay",
        "name": "Rental Bicycles Using New Symbols Prop",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "vehiclerentaloverlay--rental-bicycles-using-new-symbols-prop",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "companies": [Function],
              "configCompanies": [Function],
              "getStationName": [Function],
              "mapSymbols": [Function],
              "refreshVehicles": [Function],
              "setLocation": [Function],
              "stations": [Function],
              "visible": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Rental Bicycles Using New Symbols Prop",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="vehiclerentaloverlay--rental-bicycles-using-new-symbols-prop"
  kind="VehicleRentalOverlay"
  name="Rental Bicycles Using New Symbols Prop"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "vehiclerentaloverlay--rental-bicycles-using-new-symbols-prop",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "companies": [Function],
          "configCompanies": [Function],
          "getStationName": [Function],
          "mapSymbols": [Function],
          "refreshVehicles": [Function],
          "setLocation": [Function],
          "stations": [Function],
          "visible": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Rental Bicycles Using New Symbols Prop"
/>
`;

exports[`Storyshots VehicleRentalOverlay Rental Bicycles Visibility Controlled By Knob 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "vehiclerentaloverlay--rental-bicycles-visibility-controlled-by-knob",
        "kind": "VehicleRentalOverlay",
        "name": "Rental Bicycles Visibility Controlled By Knob",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "vehiclerentaloverlay--rental-bicycles-visibility-controlled-by-knob",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "companies": [Function],
              "configCompanies": [Function],
              "getStationName": [Function],
              "mapSymbols": [Function],
              "refreshVehicles": [Function],
              "setLocation": [Function],
              "stations": [Function],
              "visible": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Rental Bicycles Visibility Controlled By Knob",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="vehiclerentaloverlay--rental-bicycles-visibility-controlled-by-knob"
  kind="VehicleRentalOverlay"
  name="Rental Bicycles Visibility Controlled By Knob"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "vehiclerentaloverlay--rental-bicycles-visibility-controlled-by-knob",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "companies": [Function],
          "configCompanies": [Function],
          "getStationName": [Function],
          "mapSymbols": [Function],
          "refreshVehicles": [Function],
          "setLocation": [Function],
          "stations": [Function],
          "visible": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Rental Bicycles Visibility Controlled By Knob"
/>
`;

exports[`Storyshots VehicleRentalOverlay Rental Cars 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "vehiclerentaloverlay--rental-cars",
        "kind": "VehicleRentalOverlay",
        "name": "Rental Cars",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "vehiclerentaloverlay--rental-cars",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "companies": [Function],
              "configCompanies": [Function],
              "getStationName": [Function],
              "mapSymbols": [Function],
              "refreshVehicles": [Function],
              "setLocation": [Function],
              "stations": [Function],
              "visible": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Rental Cars",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="vehiclerentaloverlay--rental-cars"
  kind="VehicleRentalOverlay"
  name="Rental Cars"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "vehiclerentaloverlay--rental-cars",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "companies": [Function],
          "configCompanies": [Function],
          "getStationName": [Function],
          "mapSymbols": [Function],
          "refreshVehicles": [Function],
          "setLocation": [Function],
          "stations": [Function],
          "visible": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Rental Cars"
/>
`;

exports[`Storyshots VehicleRentalOverlay Rental E Scooters 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "vehiclerentaloverlay--rental-e-scooters",
        "kind": "VehicleRentalOverlay",
        "name": "Rental E Scooters",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "vehiclerentaloverlay--rental-e-scooters",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "companies": [Function],
              "configCompanies": [Function],
              "getStationName": [Function],
              "mapSymbols": [Function],
              "refreshVehicles": [Function],
              "setLocation": [Function],
              "stations": [Function],
              "visible": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Rental E Scooters",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="vehiclerentaloverlay--rental-e-scooters"
  kind="VehicleRentalOverlay"
  name="Rental E Scooters"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "vehiclerentaloverlay--rental-e-scooters",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "companies": [Function],
          "configCompanies": [Function],
          "getStationName": [Function],
          "mapSymbols": [Function],
          "refreshVehicles": [Function],
          "setLocation": [Function],
          "stations": [Function],
          "visible": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Rental E Scooters"
/>
`;

exports[`Storyshots VehicleRentalOverlay Rental E Scooters With Custom Naming 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "vehiclerentaloverlay--rental-e-scooters-with-custom-naming",
        "kind": "VehicleRentalOverlay",
        "name": "Rental E Scooters With Custom Naming",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "vehiclerentaloverlay--rental-e-scooters-with-custom-naming",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": Object {
            "$$typeof": Symbol(react.forward_ref),
            "props": Object {
              "companies": [Function],
              "configCompanies": [Function],
              "getStationName": [Function],
              "mapSymbols": [Function],
              "refreshVehicles": [Function],
              "setLocation": [Function],
              "stations": [Function],
              "visible": [Function],
            },
            "render": [Function],
          },
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Rental E Scooters With Custom Naming",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="vehiclerentaloverlay--rental-e-scooters-with-custom-naming"
  kind="VehicleRentalOverlay"
  name="Rental E Scooters With Custom Naming"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "vehiclerentaloverlay--rental-e-scooters-with-custom-naming",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "props": Object {
          "companies": [Function],
          "configCompanies": [Function],
          "getStationName": [Function],
          "mapSymbols": [Function],
          "refreshVehicles": [Function],
          "setLocation": [Function],
          "stations": [Function],
          "visible": [Function],
        },
        "render": [Function],
      },
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./vehicle-rental-overlay/src/VehicleRentalOverlay.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Rental E Scooters With Custom Naming"
/>
`;

exports[`Storyshots ZoomBasedMarkers Symbols For Different Zoom Levels 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "zoombasedmarkers--symbols-for-different-zoom-levels",
        "kind": "ZoomBasedMarkers",
        "name": "Symbols For Different Zoom Levels",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "zoombasedmarkers--symbols-for-different-zoom-levels",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./zoom-based-markers/src/ZoomBasedMarker.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Symbols For Different Zoom Levels",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="zoombasedmarkers--symbols-for-different-zoom-levels"
  kind="ZoomBasedMarkers"
  name="Symbols For Different Zoom Levels"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "zoombasedmarkers--symbols-for-different-zoom-levels",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./zoom-based-markers/src/ZoomBasedMarker.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Symbols For Different Zoom Levels"
/>
`;

exports[`Storyshots ZoomBasedMarkers Transformed Symbols 1`] = `
<Unknown
  argTypes={Object {}}
  args={Object {}}
  globals={Object {}}
  hooks={
    HooksContext {
      "currentContext": Object {
        "argTypes": Object {},
        "args": Object {},
        "globals": Object {},
        "hooks": [Circular],
        "id": "zoombasedmarkers--transformed-symbols",
        "kind": "ZoomBasedMarkers",
        "name": "Transformed Symbols",
        "originalStoryFn": [Function],
        "parameters": Object {
          "__id": "zoombasedmarkers--transformed-symbols",
          "__isArgsStory": false,
          "a11y": Object {
            "config": Object {
              "rules": Array [
                Object {
                  "id": "aria-required-parent",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id",
                  "reviewOnFail": true,
                },
                Object {
                  "id": "duplicate-id-aria",
                  "reviewOnFail": true,
                },
              ],
            },
          },
          "actions": Object {
            "argTypesRegex": "^on[A-Z].*",
          },
          "argTypes": Object {},
          "args": Object {},
          "component": [Function],
          "controls": Object {
            "matchers": Object {
              "color": /\\(background\\|color\\)\\$/i,
              "date": /Date\\$/,
            },
          },
          "fileName": "./zoom-based-markers/src/ZoomBasedMarker.story.js",
          "framework": "react",
          "globalTypes": undefined,
          "globals": undefined,
          "subcomponents": undefined,
        },
        "story": "Transformed Symbols",
        "viewMode": undefined,
      },
      "currentDecoratorName": null,
      "currentEffects": Array [],
      "currentHooks": Array [],
      "currentPhase": "NONE",
      "hasUpdates": false,
      "hookListsMap": WeakMap {},
      "mountedDecorators": Set {
        [Function],
        [Function],
      },
      "nextHookIndex": 0,
      "prevEffects": Array [],
      "prevMountedDecorators": Set {
        [Function],
      },
      "renderListener": [Function],
    }
  }
  id="zoombasedmarkers--transformed-symbols"
  kind="ZoomBasedMarkers"
  name="Transformed Symbols"
  originalStoryFn={[Function]}
  parameters={
    Object {
      "__id": "zoombasedmarkers--transformed-symbols",
      "__isArgsStory": false,
      "a11y": Object {
        "config": Object {
          "rules": Array [
            Object {
              "id": "aria-required-parent",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id",
              "reviewOnFail": true,
            },
            Object {
              "id": "duplicate-id-aria",
              "reviewOnFail": true,
            },
          ],
        },
      },
      "actions": Object {
        "argTypesRegex": "^on[A-Z].*",
      },
      "argTypes": Object {},
      "args": Object {},
      "component": [Function],
      "controls": Object {
        "matchers": Object {
          "color": /\\(background\\|color\\)\\$/i,
          "date": /Date\\$/,
        },
      },
      "fileName": "./zoom-based-markers/src/ZoomBasedMarker.story.js",
      "framework": "react",
      "globalTypes": undefined,
      "globals": undefined,
      "subcomponents": undefined,
    }
  }
  story="Transformed Symbols"
/>
`;
