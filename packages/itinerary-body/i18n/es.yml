otpUi:
  AccessLegBody:
    RentedVehicleSubheader:
      walkVehicle: Caminar vehículo por la {place}
      pickupRental: Recoger {modeType, select, BIKESHARE {la bicicleta compartida}
        other {{company} {modeType, select, CARSHARE {el coche} VEHICLERENTAL {e-scooter}
        BIKEPARK {la bicicleta} other {el vehículo} } {vehicleName}} }
      resumeRentalRide: Seguir utilizando el alquiler
    TncLeg:
      bookRide: Reservar un viaje
      bookRideLater: Espere hasta las {timeMillis, time, short} para reservar
      estimatedCost: 'Costo estimado: {minFare} - {maxFare}'
      estimatedTravelTime: 'Tiempo estimado de viaje: {duration} (no tiene en cuenta
        el tráfico)'
      waitForPickup: Espere{minutes, select, undefined {} other { {minutes} minutos}
        } para que lo recoja un {company}
    LegDiagramPreview:
      elevationChart: Gráfico de elevación
      noElevationData: No hay datos de elevación disponibles.
      toggleElevationChart: Activar gráfica de elevación
    summary: '{mode}{distance, select, 0 {} other { - {distance}} }{place, select,
      undefined {} other { a {place}}}'
    mapillaryTooltip: Mostrar imágenes de la calle en esta ubicación
    vehicleTitle: '{company} {modeType, select, BIKESHARE {Bicicleta} CARSHARE {Coche}
      VEHICLERENTAL {Scooter Eléctrico} BIKEPARK {Bicicleta} other {Vehículo} }'
  ItineraryBody:
    stayOnBoard: Permanecer a bordo a la <strong>{placeName}</strong>
    travelBy: Viajar {modeId, select, BICYCLE {en bicicleta} CAR {en coche} MICROMOBILITY
      {en e-scooter} WALK {a pie} other {{modeId}} }
    common:
      durationShort: '{hours, plural, =0 {} other {# hr }}{minutes} min'
    viewOnMap: Ver en el mapa
    flexPickupMessage: "Para tomar esta ruta, tiene que llamar {hasPhone, select,\n\
      \  true {1{phoneNumber}}\n  other 2{con antelación}\n}{leadDays, plural, =0\
      \ {}\n  other { al menos {leadDays, plural, one {# día} other {# días}} de antelación}\n\
      }.\n"
  TransitLegBody:
    stopId: ID de Parada {stopId}
    stopIdBasic: ID {stopId}
    stopViewer: Visor de paradas
    tripViewer: Visor de viajes
    AlertsBody:
      effectiveDate: En vigor desde {includeTime, select, true {{dateTime, time, short},
        } other {} }{dayDiff, plural, =-1 {Ayer} =0 {Hoy} =1 {Mañana} other {{dateTime,
        date, long}} }
    agencyLogo: Logo de {agencyName}
    alertsHeader: '{alertCount, plural, =1 {# alerta} other {# alertas} }'
    fare: 'Tarifa: {fare}'
    operatedBy: Servicio operado por {agencyLink}
    rideDurationAndStops: 'Paseo {duration}{numStops, plural, =1 {} other { / # paradas}}'
    routeDescription: '{routeName}{headsign, select, undefined {} other {<toPrefix>
      destino </toPrefix>{headsign}}}'
    typicalWait: 'La típica espera: {waitTime}'
