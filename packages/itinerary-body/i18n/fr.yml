# Default messages for the ItineraryBody component and subcomponents.
# To use from a react-intl application:
# - merge the content of this file into the messages object
#   that has your other localized strings,
# - flatten the ids, i.e. convert a structure such as
#      otpUi > LocationField > stations
#   into "otpUi.TripDetails.stations" (see story for an example),
# - pass the resulting object to the messages prop of IntlProvider.

otpUi:
  AccessLegBody:
    LegDiagramPreview:
      elevationChart: Dénivelés
      noElevationData: Aucune information sur les dénivelés
      toggleElevationChart: Afficher/masquer les dénivelés
    mapillaryTooltip: Afficher la vue panoramique à cet endroit
    RentedVehicleSubheader:
      resumeRentalRide: Continuez avec le véhicule loué
      ### This message includes a TriMet customization
      ### that drops company and vehicle ids from shared bikes.
      pickupRental: "Récupérez {modeType, select,
        BIKESHARE {le vélo partagé}
        other {{modeType, select,
        CARSHARE {la voiture}
        VEHICLERENTAL {la trottinette électrique}
        BIKEPARK {le vélo}
        other {le véhicule}
        } {company} {vehicleName}}
        }"
      ### If bikeshare comes with company info, this message should be used instead.
      # pickupRental: "Récupérez {modeType, select,
      #   CARSHARE {la voiture}
      #   VEHICLERENTAL {la trottinette électrique}
      #   BIKESHARE {le vélo}
      #   BIKEPARK {le vélo}
      #   other {le véhicule}
      #   } {company} {vehicleName}"
      walkVehicle: Emmenez à pied le véhicule le long de {place}
    step:
      circleClockwise: Prenez le rond-point par la gauche
      circleCounterClockwise: Prenez le rond-point par la droite
      continue: Continuez
      hardLeft: Virage à gauche
      hardRight: Virage à droite
      left: Tournez à gauche
      right: Tournez à droite
      slightlyLeft: Tournez légèrement à gauche
      slightlyRight: Tournez légèrement à droite
      uTurnLeft: Demi-tour par la gauche
      uTurnRight: Demi-tour par la droite
    stepDepart: Dirigez-vous vers {heading} sur {street}
    stepHeading:
      east: l'est
      north: le nord
      northeast: le nord-est
      northwest: le nord-ouest
      south: le sud
      southeast: le sud-est
      southwest: le sud-ouest
      west: l'ouest
    # TODO: elevator destinations (e.g. "3rd floor") may need to be localized.
    stepElevator: Prenez l'ascenseur jusqu'à {street}
    stepGeneric: "{step} sur {street}"
    # In the summary below, only include access mode actions (ride, walk...).
    # Note de traduction: nous utilisons le format
    #   "Marche/velo/etc - 2,5 miles vers 10th Street" qui peut paraître un peu "robotique".
    # Une formulation du type "2,5 miles à pied/en voiture/etc" est plus couramment "parlée"
    # mais donne lieu à des expressions bizarres comme "230 pieds à pied vers 10th Street"
    # à cause de l'utilisation d'unités impériales.
    summary: "{mode}{distance, select,
      0 {}
      other { - {distance}}
      }{place, select, undefined {} other { vers {place}}}"
    # The summary modes below only include access mode actions (ride, walk...).
    summaryMode: "{modeId, select,
      BICYCLE {Vélo}
      BICYCLE_RENT {Vélo partagé}
      CAR {{isCarHail, select, true {Course en voiture} other {Voiture}}}
      MICROMOBILITY {Trottinette}
      SCOOTER {Trottinette}
      WALK {Marche}
      other {{modeId}}
      }"
    TncLeg:
      bookRide: Réserver
      bookRideLater: Attendez jusqu'à {timeMillis, time, short} avant de réserver.
      estimatedCost: "Coût estimé : {minFare} - {maxFare}"
      estimatedTravelTime: "Temps de trajet estimé : {duration} (ne tient pas compte de la circulation)"
      waitForPickup: Attendez votre chauffeur {company}
      waitMinutesForPickup: "Attendez votre chauffeur {company} {minutes} minutes"
    unnamedPath: Chemin sans nom
    unnamedRoad: Route sans nom
    vehicleTitle: "{modeType, select,
      CARSHARE {Voiture}
      VEHICLERENTAL {Trottinette électrique}
      BIKESHARE {Vélo}
      BIKEPARK {Vélo}
      other {Véhicule}
      } {company}"
  ItineraryBody:
    common:
      durationShort: "{hours, plural, =0 {} other {# h }}{minutes} mn"
    flexPickupMessage: >
      Pour ce trajet, vous devez faire une réservation préalable {hasPhone, select,
        true {au {phoneNumber}}
        other {}
      }{leadDays, plural, =0 {}
        other { au moins {leadDays, plural, one {# jour} other {# jours}} à l'avance}
      }.
    stayOnBoard: Restez à bord à <strong>{placeName}</strong>
    travelBy: "Effectué {modeId, select,
      BICYCLE {en vélo}
      CAR {en voiture}
      MICROMOBILITY {en trottinette}
      WALK {à pied}
      other {en {modeId}}
      }"
    viewOnMap: Afficher sur le plan
  TransitLegBody:
    agencyLogo: "Logo de {agencyName}"
    AlertsBody:
      # À partir de 16:30, aujourd'hui
      # À partir du 3 mars 2019
      effectiveDate: "À partir {includeTime, select,
        true {de {dateTime, time, short}, }
        other {}
        }{dayDiff, plural,
        =-1 {hier}
        =0 {aujourd'hui}
        =1 {demain}
        other {du {dateTime, date, long}}
        }"
    alertsHeader: "{alertCount, plural,
      =0 {# alerte}
      =1 {# alerte}
      other {# alertes}
      }"
    fare: "Tarif : {fare}"
    operatedBy: Exploité par {agencyLink}
    rideDurationAndStops: "Trajet : {duration}{numStops, plural, =1 {} other { / # arrêts}}"
    routeDescription: "{routeName}{headsign, select,
      undefined {} other {<toPrefix> vers </toPrefix>{headsign}}}"
    stopId: Arrêt n°{stopId}
    stopIdBasic: Arrêt n°{stopId}
    stopViewer: Info arrêt
    tripViewer: Info trajet
    typicalWait: "Intervalle habituel : {waitTime}"
